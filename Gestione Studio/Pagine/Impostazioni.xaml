<Page x:Class="Gestione_Studio.Pagine.Impostazioni"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Gestione_Studio.Pagine"
      xmlns:materialMenu="clr-namespace:MaterialMenu;assembly=MaterialMenu"
      mc:Ignorable="d"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      TextElement.Foreground="{DynamicResource MaterialDesignBody}"
      TextElement.FontWeight="Regular"
      TextElement.FontSize="13"
      TextOptions.TextFormattingMode="Ideal" 
      TextOptions.TextRenderingMode="Auto"        
      Background="{DynamicResource MaterialDesignPaper}"
      FontFamily="{DynamicResource MaterialDesignFont}"
      Height="auto" Width="auto" 
      Title="Impostazioni">

    <Page.Resources>




        <Style x:Key="Flat_Button" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="FontFamily" Value="Arial Narrow"/>
            <Setter Property="FontSize" Value="16px"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Opacity="1" Color="White"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" >
                <Setter.Value>
                    <SolidColorBrush Opacity="1" Color="#0d61e8" />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="border"
                         SnapsToDevicePixels="True"
                         BorderThickness="1"
                         Padding="4,2"
                         BorderBrush="#0d61e8"
                         CornerRadius="0"
                         Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter 
                        Margin="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        RecognizesAccessKey="True" />

                            </Grid>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="White"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                                <ColorAnimation To="#0d61e8"
                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                                <ColorAnimation To="White"
                                            Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>

                </Trigger>


            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type DataGridColumnHeader}">

            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Margin" Value="12,0,0,0"/>
            <Setter Property="Height" Value="35" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="Background" Value="#DEDEDE"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Border x:Name="columnHeaderBorder"
		                        BorderThickness="0"
		                        Padding="3,0,3,0">

                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
			                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
				                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </ControlTemplate>


                </Setter.Value>

            </Setter>
        </Style>

        <Style x:Key="CellTextCentre" TargetType="DataGridCell">
            <Setter Property="TextBlock.TextAlignment" Value="Justify"></Setter>
            <Setter Property="TextBlock.VerticalAlignment" Value="Center"></Setter>

        </Style>

        <Storyboard x:Key="sbShowLeftMenu" >
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="-150,0,0,0" To="0,0,0,0" DecelerationRatio=".9" Duration="0:0:1" />
        </Storyboard>
        <Storyboard x:Key="sbHideLeftMenu">
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,0,0,0" To="-150,0,0,0" AccelerationRatio=".9" Duration="0:0:1" />
        </Storyboard>
        <Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnLoadedNoAnimation">
                                <DoubleAnimation To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TemplateRoot"/>
                                <DoubleAnimation To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="TemplateRoot"/>
                                <DoubleAnimation To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="TemplateRoot"/>
                            </Storyboard>
                            <Storyboard x:Key="OnLoaded">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TemplateRoot">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="TemplateRoot">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="TemplateRoot">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="TemplateRoot" Height="20" Opacity="0" RenderTransformOrigin="0,0.5">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="0" ScaleX="0"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                    
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                                <TextBlock x:Name="lblStatus" Text="{Binding ElementName=progress, Path=Value, StringFormat={}{0:0}%}" Margin="5,0,0,0"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="materialDesign:TransitionAssist.DisableTransitions" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="BeginStoryboardOnLoadedNoAnimation">
                                        <Storyboard>
                                            <DoubleAnimation To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TemplateRoot"/>
                                            <DoubleAnimation To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="TemplateRoot"/>
                                            <DoubleAnimation To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="TemplateRoot"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="BeginStoryboardOnLoadedNoAnimation"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsVisible" Value="True"/>
                                    <Condition Property="materialDesign:TransitionAssist.DisableTransitions" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="BeginStoryboardOnLoaded">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TemplateRoot">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="TemplateRoot">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="TemplateRoot">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="BeginStoryboardOnLoaded"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="True">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Page.Resources>

    <Grid>
        <DockPanel  Name="impostazioni_panel">
            <StackPanel Name="impostazioni_panel_database" Height="auto" Width="auto"  Orientation="Vertical" VerticalAlignment="Top" DockPanel.Dock="Top" Margin="0,0,0,0">
                <Label Content="Percorsi: " Margin="60,10,10,-15" FontWeight="Bold"></Label>
                <Border  BorderBrush="Gainsboro" BorderThickness="1" Margin="60,10,10,0">

                    <StackPanel Name="percorso_database" Margin="10" Orientation="Horizontal" HorizontalAlignment="Center">
                        <Label Content="Persorso Database: " Margin="0,10,0,10"></Label>
                        <TextBox x:Name="percorso_database_txt" Width="350" Margin="0,0,0,15" ></TextBox>
                        <Button x:Name="Scegli_persorso_database" Style="{StaticResource Flat_Button}" Content="Sfoglia" Width="100" Height="30" Margin="20,0,10,10" Click="Scegli_persorso_database_Click"></Button>
                        <Button x:Name="Salva_persorso_database" Style="{StaticResource Flat_Button}" Content="Salva" Width="100" Height="30" Margin="0,0,10,10" Click="Salva_persorso_database_Click"></Button>

                    </StackPanel>


                </Border>
                <Label Content="Azioni: " Margin="60,10,0,0" FontWeight="Bold"></Label>
                <Border BorderBrush="Gainsboro" BorderThickness="1" Margin="60,0,10,0">
                    <StackPanel Name="azioni_database" Margin="10" Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button x:Name="backup_database" Style="{StaticResource Flat_Button}" Content="Backup Database" Width="130" Height="30" Margin="20,0,10,10" Click="backup_database_Click"></Button>
                        <Button x:Name="ripristina_database" Style="{StaticResource Flat_Button}" Content="Ripristina Database" Width="130" Height="30" Margin="20,0,10,10" Click="ripristina_database_Click"></Button>
                        <Button x:Name="elimina_database" Style="{StaticResource Flat_Button}" Content="Svuota Database" Width="130" Height="30" Margin="20,0,10,10" Click="elimina_database_Click"></Button>
                        <Button x:Name="esporta_database" Style="{StaticResource Flat_Button}" Content="Esporta Database" Width="130" Height="30" Margin="20,0,10,10" Click="esporta_database_Click"></Button>

                    </StackPanel>
                </Border>
                <Border Margin="60,0,10,0">
                    <Grid x:Name="progress_tab">
                       
                        <ProgressBar  x:Name="progress" Minimum="0" Maximum="100" Foreground="Green" Background="#FAFAFA" BorderThickness="0" BorderBrush="#FAFAFA" Style="{DynamicResource ProgressBarStyle1}" />
                        <TextBlock  Text="{Binding ElementName=progress, Path=Value, StringFormat={}{0:0}%}" Margin="5,0,0,0" HorizontalAlignment="Center"  VerticalAlignment="Center" FontWeight="Bold" />
                        <Label x:Name="lbl_bar" Content=""></Label>
                    </Grid>




                </Border>

                <Label Content="Gruppi e Utenti: " Margin="60,10,10,10" FontWeight="Bold"></Label>
                <Border  BorderBrush="Gainsboro" BorderThickness="1" Margin="60,0,10,0">
                    <StackPanel Name="gruppi_database" Margin="10" Orientation="Horizontal" HorizontalAlignment="Center">

                        <ListBox x:Name="Listbox_gruppi" ItemsSource="{Binding gruppi}"  Width="auto" Height="150" BorderBrush="Gainsboro" BorderThickness="1"></ListBox>
                        <StackPanel Name="gruppi_button" Margin="10" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Button x:Name="Aggiungi_gruppi" Style="{StaticResource Flat_Button}" Content="Aggiungi" Width="100" Height="30" Margin="20,0,10,10" Click="Aggiungi_gruppi_Click"></Button>
                            <Button x:Name="Modifica_gruppi" Style="{StaticResource Flat_Button}" Content="Modifica" Width="100" Height="30" Margin="20,0,10,10" Click="Modifica_Gruppo_Click"></Button>
                            <Button x:Name="Cancella_gruppi" Style="{StaticResource Flat_Button}" Content="Cancella" Width="100" Height="30" Margin="20,0,10,10" Click="Cancella_Gruppo_Click"></Button>
                        </StackPanel>
                        <ListBox x:Name="Listbox_utenti" ItemsSource="{Binding nome}"  Width="auto" Height="150" BorderBrush="Gainsboro" BorderThickness="1" Margin="50,0,0,0"></ListBox>
                        <StackPanel Name="utenti_button" Margin="10" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Button x:Name="Aggiungi_utenti" Style="{StaticResource Flat_Button}" Content="Aggiungi" Width="100" Height="30" Margin="20,0,10,10" Click="Aggiungi_utenti_Click"></Button>
                            <Button x:Name="Modifica_utenti" Style="{StaticResource Flat_Button}" Content="Modifica" Width="100" Height="30" Margin="20,0,10,10" Click="Modifica_utenti_Click"></Button>
                            <Button x:Name="Cancella_utenti" Style="{StaticResource Flat_Button}" Content="Cancella" Width="100" Height="30" Margin="20,0,10,10" Click="Cancella_Utente_Click"></Button>
                        </StackPanel>

                    </StackPanel>




                </Border>

            </StackPanel>



        </DockPanel>
    </Grid>
</Page>
